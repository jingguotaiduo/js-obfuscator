function a929_0x527c(){var _0x2d18cc=['3234726yojUIA','792855kpfkmB','36gCrktV','105197ZLzulA','3090069HgoEDi','3401986duDSPn','1009488ntPoYm','uniform\x20vec4\x20u_initialColor;\x0a#if\x20TEXTURE_UNITS\x20>\x200\x0auniform\x20sampler2D\x20u_dayTextures[TEXTURE_UNITS];\x0auniform\x20vec4\x20u_dayTextureTranslationAndScale[TEXTURE_UNITS];\x0auniform\x20bool\x20u_dayTextureUseWebMercatorT[TEXTURE_UNITS];\x0a#ifdef\x20APPLY_ALPHA\x0auniform\x20float\x20u_dayTextureAlpha[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_DAY_NIGHT_ALPHA\x0auniform\x20float\x20u_dayTextureNightAlpha[TEXTURE_UNITS];\x0auniform\x20float\x20u_dayTextureDayAlpha[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_SPLIT\x0auniform\x20float\x20u_dayTextureSplit[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_BRIGHTNESS\x0auniform\x20float\x20u_dayTextureBrightness[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_CONTRAST\x0auniform\x20float\x20u_dayTextureContrast[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_HUE\x0auniform\x20float\x20u_dayTextureHue[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_SATURATION\x0auniform\x20float\x20u_dayTextureSaturation[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_GAMMA\x0auniform\x20float\x20u_dayTextureOneOverGamma[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_IMAGERY_CUTOUT\x0auniform\x20vec4\x20u_dayTextureCutoutRectangles[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20APPLY_COLOR_TO_ALPHA\x0auniform\x20vec4\x20u_colorsToAlpha[TEXTURE_UNITS];\x0a#endif\x0auniform\x20vec4\x20u_dayTextureTexCoordsRectangle[TEXTURE_UNITS];\x0a#endif\x0a#ifdef\x20SHOW_REFLECTIVE_OCEAN\x0auniform\x20sampler2D\x20u_waterMask;\x0auniform\x20vec4\x20u_waterMaskTranslationAndScale;\x0auniform\x20float\x20u_zoomedOutOceanSpecularIntensity;\x0a#endif\x0a#ifdef\x20SHOW_OCEAN_WAVES\x0auniform\x20sampler2D\x20u_oceanNormalMap;\x0a#endif\x0a#if\x20defined(ENABLE_DAYNIGHT_SHADING)\x20||\x20defined(GROUND_ATMOSPHERE)\x0auniform\x20vec2\x20u_lightingFadeDistance;\x0a#endif\x0a#ifdef\x20TILE_LIMIT_RECTANGLE\x0auniform\x20vec4\x20u_cartographicLimitRectangle;\x0a#endif\x0a#ifdef\x20GROUND_ATMOSPHERE\x0auniform\x20vec2\x20u_nightFadeDistance;\x0a#endif\x0a#ifdef\x20ENABLE_CLIPPING_PLANES\x0auniform\x20highp\x20sampler2D\x20u_clippingPlanes;\x0auniform\x20mat4\x20u_clippingPlanesMatrix;\x0auniform\x20vec4\x20u_clippingPlanesEdgeStyle;\x0a#endif\x0a#if\x20defined(FOG)\x20&&\x20defined(DYNAMIC_ATMOSPHERE_LIGHTING)\x20&&\x20(defined(ENABLE_VERTEX_LIGHTING)\x20||\x20defined(ENABLE_DAYNIGHT_SHADING))\x0auniform\x20float\x20u_minimumBrightness;\x0a#endif\x0a#ifdef\x20COLOR_CORRECT\x0auniform\x20vec3\x20u_hsbShift;\x0a#endif\x0a#ifdef\x20HIGHLIGHT_FILL_TILE\x0auniform\x20vec4\x20u_fillHighlightColor;\x0a#endif\x0a#ifdef\x20TRANSLUCENT\x0auniform\x20vec4\x20u_frontFaceAlphaByDistance;\x0auniform\x20vec4\x20u_backFaceAlphaByDistance;\x0auniform\x20vec4\x20u_translucencyRectangle;\x0a#endif\x0a#ifdef\x20UNDERGROUND_COLOR\x0auniform\x20vec4\x20u_undergroundColor;\x0auniform\x20vec4\x20u_undergroundColorAlphaByDistance;\x0a#endif\x0a#ifdef\x20ENABLE_VERTEX_LIGHTING\x0auniform\x20float\x20u_lambertDiffuseMultiplier;\x0a#endif\x0avarying\x20vec3\x20v_positionMC;\x0avarying\x20vec3\x20v_positionEC;\x0avarying\x20vec3\x20v_textureCoordinates;\x0avarying\x20vec3\x20v_normalMC;\x0avarying\x20vec3\x20v_normalEC;\x0a#ifdef\x20APPLY_MATERIAL\x0avarying\x20float\x20v_height;\x0avarying\x20float\x20v_slope;\x0avarying\x20float\x20v_aspect;\x0a#endif\x0a#if\x20defined(FOG)\x20||\x20defined(GROUND_ATMOSPHERE)\x20||\x20defined(UNDERGROUND_COLOR)\x20||\x20defined(TRANSLUCENT)\x0avarying\x20float\x20v_distance;\x0a#endif\x0a#if\x20defined(FOG)\x20||\x20defined(GROUND_ATMOSPHERE)\x0avarying\x20vec3\x20v_fogRayleighColor;\x0avarying\x20vec3\x20v_fogMieColor;\x0a#endif\x0a#ifdef\x20GROUND_ATMOSPHERE\x0avarying\x20vec3\x20v_rayleighColor;\x0avarying\x20vec3\x20v_mieColor;\x0a#endif\x0a#if\x20defined(UNDERGROUND_COLOR)\x20||\x20defined(TRANSLUCENT)\x0afloat\x20interpolateByDistance(vec4\x20nearFarScalar,\x20float\x20distance)\x0a{\x0afloat\x20startDistance\x20=\x20nearFarScalar.x;\x0afloat\x20startValue\x20=\x20nearFarScalar.y;\x0afloat\x20endDistance\x20=\x20nearFarScalar.z;\x0afloat\x20endValue\x20=\x20nearFarScalar.w;\x0afloat\x20t\x20=\x20clamp((distance\x20-\x20startDistance)\x20/\x20(endDistance\x20-\x20startDistance),\x200.0,\x201.0);\x0areturn\x20mix(startValue,\x20endValue,\x20t);\x0a}\x0a#endif\x0a#if\x20defined(UNDERGROUND_COLOR)\x20||\x20defined(TRANSLUCENT)\x20||\x20defined(APPLY_MATERIAL)\x0avec4\x20alphaBlend(vec4\x20sourceColor,\x20vec4\x20destinationColor)\x0a{\x0areturn\x20sourceColor\x20*\x20vec4(sourceColor.aaa,\x201.0)\x20+\x20destinationColor\x20*\x20(1.0\x20-\x20sourceColor.a);\x0a}\x0a#endif\x0a#ifdef\x20TRANSLUCENT\x0abool\x20inTranslucencyRectangle()\x0a{\x0areturn\x0av_textureCoordinates.x\x20>\x20u_translucencyRectangle.x\x20&&\x0av_textureCoordinates.x\x20<\x20u_translucencyRectangle.z\x20&&\x0av_textureCoordinates.y\x20>\x20u_translucencyRectangle.y\x20&&\x0av_textureCoordinates.y\x20<\x20u_translucencyRectangle.w;\x0a}\x0a#endif\x0avec4\x20sampleAndBlend(\x0avec4\x20previousColor,\x0asampler2D\x20textureToSample,\x0avec2\x20tileTextureCoordinates,\x0avec4\x20textureCoordinateRectangle,\x0avec4\x20textureCoordinateTranslationAndScale,\x0afloat\x20textureAlpha,\x0afloat\x20textureNightAlpha,\x0afloat\x20textureDayAlpha,\x0afloat\x20textureBrightness,\x0afloat\x20textureContrast,\x0afloat\x20textureHue,\x0afloat\x20textureSaturation,\x0afloat\x20textureOneOverGamma,\x0afloat\x20split,\x0avec4\x20colorToAlpha,\x0afloat\x20nightBlend)\x0a{\x0avec2\x20alphaMultiplier\x20=\x20step(textureCoordinateRectangle.st,\x20tileTextureCoordinates);\x0atextureAlpha\x20=\x20textureAlpha\x20*\x20alphaMultiplier.x\x20*\x20alphaMultiplier.y;\x0aalphaMultiplier\x20=\x20step(vec2(0.0),\x20textureCoordinateRectangle.pq\x20-\x20tileTextureCoordinates);\x0atextureAlpha\x20=\x20textureAlpha\x20*\x20alphaMultiplier.x\x20*\x20alphaMultiplier.y;\x0a#if\x20defined(APPLY_DAY_NIGHT_ALPHA)\x20&&\x20defined(ENABLE_DAYNIGHT_SHADING)\x0atextureAlpha\x20*=\x20mix(textureDayAlpha,\x20textureNightAlpha,\x20nightBlend);\x0a#endif\x0avec2\x20translation\x20=\x20textureCoordinateTranslationAndScale.xy;\x0avec2\x20scale\x20=\x20textureCoordinateTranslationAndScale.zw;\x0avec2\x20textureCoordinates\x20=\x20tileTextureCoordinates\x20*\x20scale\x20+\x20translation;\x0avec4\x20value\x20=\x20texture2D(textureToSample,\x20textureCoordinates);\x0avec3\x20color\x20=\x20value.rgb;\x0afloat\x20alpha\x20=\x20value.a;\x0a#ifdef\x20APPLY_COLOR_TO_ALPHA\x0avec3\x20colorDiff\x20=\x20abs(color.rgb\x20-\x20colorToAlpha.rgb);\x0acolorDiff.r\x20=\x20max(max(colorDiff.r,\x20colorDiff.g),\x20colorDiff.b);\x0aalpha\x20=\x20czm_branchFreeTernary(colorDiff.r\x20<\x20colorToAlpha.a,\x200.0,\x20alpha);\x0a#endif\x0a#if\x20!defined(APPLY_GAMMA)\x0avec4\x20tempColor\x20=\x20czm_gammaCorrect(vec4(color,\x20alpha));\x0acolor\x20=\x20tempColor.rgb;\x0aalpha\x20=\x20tempColor.a;\x0a#else\x0acolor\x20=\x20pow(color,\x20vec3(textureOneOverGamma));\x0a#endif\x0a#ifdef\x20APPLY_SPLIT\x0afloat\x20splitPosition\x20=\x20czm_imagerySplitPosition;\x0aif\x20(split\x20<\x200.0\x20&&\x20gl_FragCoord.x\x20>\x20splitPosition)\x20{\x0aalpha\x20=\x200.0;\x0a}\x0aelse\x20if\x20(split\x20>\x200.0\x20&&\x20gl_FragCoord.x\x20<\x20splitPosition)\x20{\x0aalpha\x20=\x200.0;\x0a}\x0a#endif\x0a#ifdef\x20APPLY_BRIGHTNESS\x0acolor\x20=\x20mix(vec3(0.0),\x20color,\x20textureBrightness);\x0a#endif\x0a#ifdef\x20APPLY_CONTRAST\x0acolor\x20=\x20mix(vec3(0.5),\x20color,\x20textureContrast);\x0a#endif\x0a#ifdef\x20APPLY_HUE\x0acolor\x20=\x20czm_hue(color,\x20textureHue);\x0a#endif\x0a#ifdef\x20APPLY_SATURATION\x0acolor\x20=\x20czm_saturation(color,\x20textureSaturation);\x0a#endif\x0afloat\x20sourceAlpha\x20=\x20alpha\x20*\x20textureAlpha;\x0afloat\x20outAlpha\x20=\x20mix(previousColor.a,\x201.0,\x20sourceAlpha);\x0aoutAlpha\x20+=\x20sign(outAlpha)\x20-\x201.0;\x0avec3\x20outColor\x20=\x20mix(previousColor.rgb\x20*\x20previousColor.a,\x20color,\x20sourceAlpha)\x20/\x20outAlpha;\x0areturn\x20vec4(outColor,\x20max(outAlpha,\x200.0));\x0a}\x0avec3\x20colorCorrect(vec3\x20rgb)\x20{\x0a#ifdef\x20COLOR_CORRECT\x0avec3\x20hsb\x20=\x20czm_RGBToHSB(rgb);\x0ahsb.x\x20+=\x20u_hsbShift.x;\x0ahsb.y\x20=\x20clamp(hsb.y\x20+\x20u_hsbShift.y,\x200.0,\x201.0);\x0ahsb.z\x20=\x20hsb.z\x20>\x20czm_epsilon7\x20?\x20hsb.z\x20+\x20u_hsbShift.z\x20:\x200.0;\x0argb\x20=\x20czm_HSBToRGB(hsb);\x0a#endif\x0areturn\x20rgb;\x0a}\x0avec4\x20computeDayColor(vec4\x20initialColor,\x20vec3\x20textureCoordinates,\x20float\x20nightBlend);\x0avec4\x20computeWaterColor(vec3\x20positionEyeCoordinates,\x20vec2\x20textureCoordinates,\x20mat3\x20enuToEye,\x20vec4\x20imageryColor,\x20float\x20specularMapValue,\x20float\x20fade);\x0a#ifdef\x20GROUND_ATMOSPHERE\x0avec3\x20computeGroundAtmosphereColor(vec3\x20fogColor,\x20vec4\x20finalColor,\x20vec3\x20atmosphereLightDirection,\x20float\x20cameraDist);\x0a#endif\x0aconst\x20float\x20fExposure\x20=\x202.0;\x0avoid\x20main()\x0a{\x0a#ifdef\x20TILE_LIMIT_RECTANGLE\x0aif\x20(v_textureCoordinates.x\x20<\x20u_cartographicLimitRectangle.x\x20||\x20u_cartographicLimitRectangle.z\x20<\x20v_textureCoordinates.x\x20||\x0av_textureCoordinates.y\x20<\x20u_cartographicLimitRectangle.y\x20||\x20u_cartographicLimitRectangle.w\x20<\x20v_textureCoordinates.y)\x0a{\x0adiscard;\x0a}\x0a#endif\x0a#ifdef\x20ENABLE_CLIPPING_PLANES\x0afloat\x20clipDistance\x20=\x20clip(gl_FragCoord,\x20u_clippingPlanes,\x20u_clippingPlanesMatrix);\x0a#endif\x0a#if\x20defined(SHOW_REFLECTIVE_OCEAN)\x20||\x20defined(ENABLE_DAYNIGHT_SHADING)\x20||\x20defined(HDR)\x0avec3\x20normalMC\x20=\x20czm_geodeticSurfaceNormal(v_positionMC,\x20vec3(0.0),\x20vec3(1.0));\x0avec3\x20normalEC\x20=\x20czm_normal3D\x20*\x20normalMC;\x0a#endif\x0a#if\x20defined(APPLY_DAY_NIGHT_ALPHA)\x20&&\x20defined(ENABLE_DAYNIGHT_SHADING)\x0afloat\x20nightBlend\x20=\x201.0\x20-\x20clamp(czm_getLambertDiffuse(czm_lightDirectionEC,\x20normalEC)\x20*\x205.0,\x200.0,\x201.0);\x0a#else\x0afloat\x20nightBlend\x20=\x200.0;\x0a#endif\x0avec4\x20color\x20=\x20computeDayColor(u_initialColor,\x20clamp(v_textureCoordinates,\x200.0,\x201.0),\x20nightBlend);\x0a#ifdef\x20SHOW_TILE_BOUNDARIES\x0aif\x20(v_textureCoordinates.x\x20<\x20(1.0/256.0)\x20||\x20v_textureCoordinates.x\x20>\x20(255.0/256.0)\x20||\x0av_textureCoordinates.y\x20<\x20(1.0/256.0)\x20||\x20v_textureCoordinates.y\x20>\x20(255.0/256.0))\x0a{\x0acolor\x20=\x20vec4(1.0,\x200.0,\x200.0,\x201.0);\x0a}\x0a#endif\x0a#if\x20defined(ENABLE_DAYNIGHT_SHADING)\x20||\x20defined(GROUND_ATMOSPHERE)\x0afloat\x20cameraDist;\x0aif\x20(czm_sceneMode\x20==\x20czm_sceneMode2D)\x0a{\x0acameraDist\x20=\x20max(czm_frustumPlanes.x\x20-\x20czm_frustumPlanes.y,\x20czm_frustumPlanes.w\x20-\x20czm_frustumPlanes.z)\x20*\x200.5;\x0a}\x0aelse\x20if\x20(czm_sceneMode\x20==\x20czm_sceneModeColumbusView)\x0a{\x0acameraDist\x20=\x20-czm_view[3].z;\x0a}\x0aelse\x0a{\x0acameraDist\x20=\x20length(czm_view[3]);\x0a}\x0afloat\x20fadeOutDist\x20=\x20u_lightingFadeDistance.x;\x0afloat\x20fadeInDist\x20=\x20u_lightingFadeDistance.y;\x0aif\x20(czm_sceneMode\x20!=\x20czm_sceneMode3D)\x20{\x0avec3\x20radii\x20=\x20czm_ellipsoidRadii;\x0afloat\x20maxRadii\x20=\x20max(radii.x,\x20max(radii.y,\x20radii.z));\x0afadeOutDist\x20-=\x20maxRadii;\x0afadeInDist\x20-=\x20maxRadii;\x0a}\x0afloat\x20fade\x20=\x20clamp((cameraDist\x20-\x20fadeOutDist)\x20/\x20(fadeInDist\x20-\x20fadeOutDist),\x200.0,\x201.0);\x0a#else\x0afloat\x20fade\x20=\x200.0;\x0a#endif\x0a#ifdef\x20SHOW_REFLECTIVE_OCEAN\x0avec2\x20waterMaskTranslation\x20=\x20u_waterMaskTranslationAndScale.xy;\x0avec2\x20waterMaskScale\x20=\x20u_waterMaskTranslationAndScale.zw;\x0avec2\x20waterMaskTextureCoordinates\x20=\x20v_textureCoordinates.xy\x20*\x20waterMaskScale\x20+\x20waterMaskTranslation;\x0awaterMaskTextureCoordinates.y\x20=\x201.0\x20-\x20waterMaskTextureCoordinates.y;\x0afloat\x20mask\x20=\x20texture2D(u_waterMask,\x20waterMaskTextureCoordinates).r;\x0aif\x20(mask\x20>\x200.0)\x0a{\x0amat3\x20enuToEye\x20=\x20czm_eastNorthUpToEyeCoordinates(v_positionMC,\x20normalEC);\x0avec2\x20ellipsoidTextureCoordinates\x20=\x20czm_ellipsoidWgs84TextureCoordinates(normalMC);\x0avec2\x20ellipsoidFlippedTextureCoordinates\x20=\x20czm_ellipsoidWgs84TextureCoordinates(normalMC.zyx);\x0avec2\x20textureCoordinates\x20=\x20mix(ellipsoidTextureCoordinates,\x20ellipsoidFlippedTextureCoordinates,\x20czm_morphTime\x20*\x20smoothstep(0.9,\x200.95,\x20normalMC.z));\x0acolor\x20=\x20computeWaterColor(v_positionEC,\x20textureCoordinates,\x20enuToEye,\x20color,\x20mask,\x20fade);\x0a}\x0a#endif\x0a#ifdef\x20APPLY_MATERIAL\x0aczm_materialInput\x20materialInput;\x0amaterialInput.st\x20=\x20v_textureCoordinates.st;\x0amaterialInput.normalEC\x20=\x20normalize(v_normalEC);\x0amaterialInput.positionToEyeEC\x20=\x20-v_positionEC;\x0amaterialInput.tangentToEyeMatrix\x20=\x20czm_eastNorthUpToEyeCoordinates(v_positionMC,\x20normalize(v_normalEC));\x0amaterialInput.slope\x20=\x20v_slope;\x0amaterialInput.height\x20=\x20v_height;\x0amaterialInput.aspect\x20=\x20v_aspect;\x0aczm_material\x20material\x20=\x20czm_getMaterial(materialInput);\x0avec4\x20materialColor\x20=\x20vec4(material.diffuse,\x20material.alpha);\x0acolor\x20=\x20alphaBlend(materialColor,\x20color);\x0a#endif\x0a#ifdef\x20ENABLE_VERTEX_LIGHTING\x0afloat\x20diffuseIntensity\x20=\x20clamp(czm_getLambertDiffuse(czm_lightDirectionEC,\x20normalize(v_normalEC))\x20*\x20u_lambertDiffuseMultiplier\x20+\x200.3,\x200.0,\x201.0);\x0avec4\x20finalColor\x20=\x20vec4(color.rgb\x20*\x20czm_lightColor\x20*\x20diffuseIntensity,\x20color.a);\x0a#elif\x20defined(ENABLE_DAYNIGHT_SHADING)\x0afloat\x20diffuseIntensity\x20=\x20clamp(czm_getLambertDiffuse(czm_lightDirectionEC,\x20normalEC)\x20*\x205.0\x20+\x200.3,\x200.0,\x201.0);\x0adiffuseIntensity\x20=\x20mix(1.0,\x20diffuseIntensity,\x20fade);\x0avec4\x20finalColor\x20=\x20vec4(color.rgb\x20*\x20czm_lightColor\x20*\x20diffuseIntensity,\x20color.a);\x0a#else\x0avec4\x20finalColor\x20=\x20color;\x0a#endif\x0a#ifdef\x20ENABLE_CLIPPING_PLANES\x0avec4\x20clippingPlanesEdgeColor\x20=\x20vec4(1.0);\x0aclippingPlanesEdgeColor.rgb\x20=\x20u_clippingPlanesEdgeStyle.rgb;\x0afloat\x20clippingPlanesEdgeWidth\x20=\x20u_clippingPlanesEdgeStyle.a;\x0aif\x20(clipDistance\x20<\x20clippingPlanesEdgeWidth)\x0a{\x0afinalColor\x20=\x20clippingPlanesEdgeColor;\x0a}\x0a#endif\x0a#ifdef\x20HIGHLIGHT_FILL_TILE\x0afinalColor\x20=\x20vec4(mix(finalColor.rgb,\x20u_fillHighlightColor.rgb,\x20u_fillHighlightColor.a),\x20finalColor.a);\x0a#endif\x0a#if\x20defined(FOG)\x20||\x20defined(GROUND_ATMOSPHERE)\x0avec3\x20fogColor\x20=\x20colorCorrect(v_fogMieColor)\x20+\x20finalColor.rgb\x20*\x20colorCorrect(v_fogRayleighColor);\x0a#ifndef\x20HDR\x0afogColor\x20=\x20vec3(1.0)\x20-\x20exp(-fExposure\x20*\x20fogColor);\x0a#endif\x0a#endif\x0a#if\x20defined(DYNAMIC_ATMOSPHERE_LIGHTING_FROM_SUN)\x0avec3\x20atmosphereLightDirection\x20=\x20czm_sunDirectionWC;\x0a#else\x0avec3\x20atmosphereLightDirection\x20=\x20czm_lightDirectionWC;\x0a#endif\x0a#ifdef\x20FOG\x0a#if\x20defined(DYNAMIC_ATMOSPHERE_LIGHTING)\x20&&\x20(defined(ENABLE_VERTEX_LIGHTING)\x20||\x20defined(ENABLE_DAYNIGHT_SHADING))\x0afloat\x20darken\x20=\x20clamp(dot(normalize(czm_viewerPositionWC),\x20atmosphereLightDirection),\x20u_minimumBrightness,\x201.0);\x0afogColor\x20*=\x20darken;\x0a#endif\x0a#ifdef\x20HDR\x0aconst\x20float\x20modifier\x20=\x200.15;\x0afinalColor\x20=\x20vec4(czm_fog(v_distance,\x20finalColor.rgb,\x20fogColor,\x20modifier),\x20finalColor.a);\x0a#else\x0afinalColor\x20=\x20vec4(czm_fog(v_distance,\x20finalColor.rgb,\x20fogColor),\x20finalColor.a);\x0a#endif\x0a#endif\x0a#ifdef\x20GROUND_ATMOSPHERE\x0aif\x20(!czm_backFacing())\x0a{\x0avec3\x20groundAtmosphereColor\x20=\x20computeGroundAtmosphereColor(fogColor,\x20finalColor,\x20atmosphereLightDirection,\x20cameraDist);\x0afinalColor\x20=\x20vec4(mix(finalColor.rgb,\x20groundAtmosphereColor,\x20fade),\x20finalColor.a);\x0a}\x0a#endif\x0a#ifdef\x20UNDERGROUND_COLOR\x0aif\x20(czm_backFacing())\x0a{\x0afloat\x20distanceFromEllipsoid\x20=\x20max(czm_eyeHeight,\x200.0);\x0afloat\x20distance\x20=\x20max(v_distance\x20-\x20distanceFromEllipsoid,\x200.0);\x0afloat\x20blendAmount\x20=\x20interpolateByDistance(u_undergroundColorAlphaByDistance,\x20distance);\x0avec4\x20undergroundColor\x20=\x20vec4(u_undergroundColor.rgb,\x20u_undergroundColor.a\x20*\x20blendAmount);\x0afinalColor\x20=\x20alphaBlend(undergroundColor,\x20finalColor);\x0a}\x0a#endif\x0a#ifdef\x20TRANSLUCENT\x0aif\x20(inTranslucencyRectangle())\x0a{\x0avec4\x20alphaByDistance\x20=\x20gl_FrontFacing\x20?\x20u_frontFaceAlphaByDistance\x20:\x20u_backFaceAlphaByDistance;\x0afinalColor.a\x20*=\x20interpolateByDistance(alphaByDistance,\x20v_distance);\x0a}\x0a#endif\x0agl_FragColor\x20=\x20finalColor;\x0a}\x0a#ifdef\x20GROUND_ATMOSPHERE\x0avec3\x20computeGroundAtmosphereColor(vec3\x20fogColor,\x20vec4\x20finalColor,\x20vec3\x20atmosphereLightDirection,\x20float\x20cameraDist)\x0a{\x0a#if\x20defined(PER_FRAGMENT_GROUND_ATMOSPHERE)\x20&&\x20defined(DYNAMIC_ATMOSPHERE_LIGHTING)\x20&&\x20(defined(ENABLE_DAYNIGHT_SHADING)\x20||\x20defined(ENABLE_VERTEX_LIGHTING))\x0afloat\x20mpp\x20=\x20czm_metersPerPixel(vec4(0.0,\x200.0,\x20-czm_currentFrustum.x,\x201.0),\x201.0);\x0avec2\x20xy\x20=\x20gl_FragCoord.xy\x20/\x20czm_viewport.zw\x20*\x202.0\x20-\x20vec2(1.0);\x0axy\x20*=\x20czm_viewport.zw\x20*\x20mpp\x20*\x200.5;\x0avec3\x20direction\x20=\x20normalize(vec3(xy,\x20-czm_currentFrustum.x));\x0aczm_ray\x20ray\x20=\x20czm_ray(vec3(0.0),\x20direction);\x0avec3\x20ellipsoid_center\x20=\x20czm_view[3].xyz;\x0aczm_raySegment\x20intersection\x20=\x20czm_rayEllipsoidIntersectionInterval(ray,\x20ellipsoid_center,\x20czm_ellipsoidInverseRadii);\x0avec3\x20ellipsoidPosition\x20=\x20czm_pointAlongRay(ray,\x20intersection.start);\x0aellipsoidPosition\x20=\x20(czm_inverseView\x20*\x20vec4(ellipsoidPosition,\x201.0)).xyz;\x0aAtmosphereColor\x20atmosColor\x20=\x20computeGroundAtmosphereFromSpace(ellipsoidPosition,\x20true,\x20atmosphereLightDirection);\x0avec3\x20groundAtmosphereColor\x20=\x20colorCorrect(atmosColor.mie)\x20+\x20finalColor.rgb\x20*\x20colorCorrect(atmosColor.rayleigh);\x0a#ifndef\x20HDR\x0agroundAtmosphereColor\x20=\x20vec3(1.0)\x20-\x20exp(-fExposure\x20*\x20groundAtmosphereColor);\x0a#endif\x0afloat\x20fadeInDist\x20=\x20u_nightFadeDistance.x;\x0afloat\x20fadeOutDist\x20=\x20u_nightFadeDistance.y;\x0afloat\x20sunlitAtmosphereIntensity\x20=\x20clamp((cameraDist\x20-\x20fadeOutDist)\x20/\x20(fadeInDist\x20-\x20fadeOutDist),\x200.0,\x201.0);\x0a#ifdef\x20HDR\x0asunlitAtmosphereIntensity\x20=\x20max(sunlitAtmosphereIntensity\x20*\x20sunlitAtmosphereIntensity,\x200.03);\x0a#endif\x0agroundAtmosphereColor\x20=\x20mix(groundAtmosphereColor,\x20fogColor,\x20sunlitAtmosphereIntensity);\x0a#else\x0avec3\x20groundAtmosphereColor\x20=\x20fogColor;\x0a#endif\x0a#ifdef\x20HDR\x0agroundAtmosphereColor\x20=\x20czm_saturation(groundAtmosphereColor,\x201.6);\x0a#endif\x0areturn\x20groundAtmosphereColor;\x0a}\x0a#endif\x0a#ifdef\x20SHOW_REFLECTIVE_OCEAN\x0afloat\x20waveFade(float\x20edge0,\x20float\x20edge1,\x20float\x20x)\x0a{\x0afloat\x20y\x20=\x20clamp((x\x20-\x20edge0)\x20/\x20(edge1\x20-\x20edge0),\x200.0,\x201.0);\x0areturn\x20pow(1.0\x20-\x20y,\x205.0);\x0a}\x0afloat\x20linearFade(float\x20edge0,\x20float\x20edge1,\x20float\x20x)\x0a{\x0areturn\x20clamp((x\x20-\x20edge0)\x20/\x20(edge1\x20-\x20edge0),\x200.0,\x201.0);\x0a}\x0aconst\x20float\x20oceanFrequencyLowAltitude\x20=\x20825000.0;\x0aconst\x20float\x20oceanAnimationSpeedLowAltitude\x20=\x200.004;\x0aconst\x20float\x20oceanOneOverAmplitudeLowAltitude\x20=\x201.0\x20/\x202.0;\x0aconst\x20float\x20oceanSpecularIntensity\x20=\x200.5;\x0aconst\x20float\x20oceanFrequencyHighAltitude\x20=\x20125000.0;\x0aconst\x20float\x20oceanAnimationSpeedHighAltitude\x20=\x200.008;\x0aconst\x20float\x20oceanOneOverAmplitudeHighAltitude\x20=\x201.0\x20/\x202.0;\x0avec4\x20computeWaterColor(vec3\x20positionEyeCoordinates,\x20vec2\x20textureCoordinates,\x20mat3\x20enuToEye,\x20vec4\x20imageryColor,\x20float\x20maskValue,\x20float\x20fade)\x0a{\x0avec3\x20positionToEyeEC\x20=\x20-positionEyeCoordinates;\x0afloat\x20positionToEyeECLength\x20=\x20length(positionToEyeEC);\x0avec3\x20normalizedPositionToEyeEC\x20=\x20normalize(normalize(positionToEyeEC));\x0afloat\x20waveIntensity\x20=\x20waveFade(70000.0,\x201000000.0,\x20positionToEyeECLength);\x0a#ifdef\x20SHOW_OCEAN_WAVES\x0afloat\x20time\x20=\x20czm_frameNumber\x20*\x20oceanAnimationSpeedHighAltitude;\x0avec4\x20noise\x20=\x20czm_getWaterNoise(u_oceanNormalMap,\x20textureCoordinates\x20*\x20oceanFrequencyHighAltitude,\x20time,\x200.0);\x0avec3\x20normalTangentSpaceHighAltitude\x20=\x20vec3(noise.xy,\x20noise.z\x20*\x20oceanOneOverAmplitudeHighAltitude);\x0atime\x20=\x20czm_frameNumber\x20*\x20oceanAnimationSpeedLowAltitude;\x0anoise\x20=\x20czm_getWaterNoise(u_oceanNormalMap,\x20textureCoordinates\x20*\x20oceanFrequencyLowAltitude,\x20time,\x200.0);\x0avec3\x20normalTangentSpaceLowAltitude\x20=\x20vec3(noise.xy,\x20noise.z\x20*\x20oceanOneOverAmplitudeLowAltitude);\x0afloat\x20highAltitudeFade\x20=\x20linearFade(0.0,\x2060000.0,\x20positionToEyeECLength);\x0afloat\x20lowAltitudeFade\x20=\x201.0\x20-\x20linearFade(20000.0,\x2060000.0,\x20positionToEyeECLength);\x0avec3\x20normalTangentSpace\x20=\x0a(highAltitudeFade\x20*\x20normalTangentSpaceHighAltitude)\x20+\x0a(lowAltitudeFade\x20*\x20normalTangentSpaceLowAltitude);\x0anormalTangentSpace\x20=\x20normalize(normalTangentSpace);\x0anormalTangentSpace.xy\x20*=\x20waveIntensity;\x0anormalTangentSpace\x20=\x20normalize(normalTangentSpace);\x0a#else\x0avec3\x20normalTangentSpace\x20=\x20vec3(0.0,\x200.0,\x201.0);\x0a#endif\x0avec3\x20normalEC\x20=\x20enuToEye\x20*\x20normalTangentSpace;\x0aconst\x20vec3\x20waveHighlightColor\x20=\x20vec3(0.3,\x200.45,\x200.6);\x0afloat\x20diffuseIntensity\x20=\x20czm_getLambertDiffuse(czm_lightDirectionEC,\x20normalEC)\x20*\x20maskValue;\x0avec3\x20diffuseHighlight\x20=\x20waveHighlightColor\x20*\x20diffuseIntensity\x20*\x20(1.0\x20-\x20fade);\x0a#ifdef\x20SHOW_OCEAN_WAVES\x0afloat\x20tsPerturbationRatio\x20=\x20normalTangentSpace.z;\x0avec3\x20nonDiffuseHighlight\x20=\x20mix(waveHighlightColor\x20*\x205.0\x20*\x20(1.0\x20-\x20tsPerturbationRatio),\x20vec3(0.0),\x20diffuseIntensity);\x0a#else\x0avec3\x20nonDiffuseHighlight\x20=\x20vec3(0.0);\x0a#endif\x0afloat\x20specularIntensity\x20=\x20czm_getSpecular(czm_lightDirectionEC,\x20normalizedPositionToEyeEC,\x20normalEC,\x2010.0);\x0afloat\x20surfaceReflectance\x20=\x20mix(0.0,\x20mix(u_zoomedOutOceanSpecularIntensity,\x20oceanSpecularIntensity,\x20waveIntensity),\x20maskValue);\x0afloat\x20specular\x20=\x20specularIntensity\x20*\x20surfaceReflectance;\x0a#ifdef\x20HDR\x0aspecular\x20*=\x201.4;\x0afloat\x20e\x20=\x200.2;\x0afloat\x20d\x20=\x203.3;\x0afloat\x20c\x20=\x201.7;\x0avec3\x20color\x20=\x20imageryColor.rgb\x20+\x20(c\x20*\x20(vec3(e)\x20+\x20imageryColor.rgb\x20*\x20d)\x20*\x20(diffuseHighlight\x20+\x20nonDiffuseHighlight\x20+\x20specular));\x0a#else\x0avec3\x20color\x20=\x20imageryColor.rgb\x20+\x20diffuseHighlight\x20+\x20nonDiffuseHighlight\x20+\x20specular;\x0a#endif\x0areturn\x20vec4(color,\x20imageryColor.a);\x0a}\x0a#endif\x20//\x20#ifdef\x20SHOW_REFLECTIVE_OCEAN\x0a','59165vhiYeJ','16LURDcS'];a929_0x527c=function(){return _0x2d18cc;};return a929_0x527c();}var a929_0x198f7d=a929_0xb2ff;function a929_0xb2ff(_0x4a045c,_0x3a41a7){var _0x527c0a=a929_0x527c();return a929_0xb2ff=function(_0xb2ff53,_0x235d05){_0xb2ff53=_0xb2ff53-0x99;var _0x5cd585=_0x527c0a[_0xb2ff53];return _0x5cd585;},a929_0xb2ff(_0x4a045c,_0x3a41a7);}(function(_0x5b3d06,_0x194d58){var _0x4ec3e5=a929_0xb2ff,_0x40750e=_0x5b3d06();while(!![]){try{var _0x34bd0b=parseInt(_0x4ec3e5(0x9a))/0x1+-parseInt(_0x4ec3e5(0x9d))/0x2+parseInt(_0x4ec3e5(0xa2))/0x3+-parseInt(_0x4ec3e5(0x99))/0x4*(-parseInt(_0x4ec3e5(0x9f))/0x5)+parseInt(_0x4ec3e5(0xa1))/0x6+parseInt(_0x4ec3e5(0x9c))/0x7+parseInt(_0x4ec3e5(0xa0))/0x8*(-parseInt(_0x4ec3e5(0x9b))/0x9);if(_0x34bd0b===_0x194d58)break;else _0x40750e['push'](_0x40750e['shift']());}catch(_0x3b37d7){_0x40750e['push'](_0x40750e['shift']());}}}(a929_0x527c,0x4b9a8));export default a929_0x198f7d(0x9e);
var a994_0x3262f4=a994_0x49bf;function a994_0x846d(){var _0x3af985=['5075160WLOVwj','808794fqzRqL','1787405MraHxg','1714290fITfbf','411196RCfhjv','uniform\x20sampler2D\x20colorTexture;\x0auniform\x20sampler2D\x20dirtTexture;\x0auniform\x20sampler2D\x20starTexture;\x0auniform\x20vec2\x20dirtTextureDimensions;\x0auniform\x20float\x20distortion;\x0auniform\x20float\x20ghostDispersal;\x0auniform\x20float\x20haloWidth;\x0auniform\x20float\x20dirtAmount;\x0auniform\x20float\x20earthRadius;\x0auniform\x20float\x20intensity;\x0avarying\x20vec2\x20v_textureCoordinates;\x0a#define\x20DISTANCE_TO_SPACE\x206500000.0\x0avec4\x20getNDCFromWC(vec3\x20WC,\x20float\x20earthRadius)\x0a{\x0avec4\x20positionEC\x20=\x20czm_view\x20*\x20vec4(WC,\x201.0);\x0apositionEC\x20=\x20vec4(positionEC.x\x20+\x20earthRadius,\x20positionEC.y,\x20positionEC.z,\x201.0);\x0avec4\x20positionWC\x20=\x20czm_eyeToWindowCoordinates(positionEC);\x0areturn\x20czm_viewportOrthographic\x20*\x20vec4(positionWC.xy,\x20-positionWC.z,\x201.0);\x0a}\x0afloat\x20isInEarth(vec2\x20texcoord,\x20vec2\x20sceneSize)\x0a{\x0avec2\x20NDC\x20=\x20texcoord\x20*\x202.0\x20-\x201.0;\x0avec4\x20earthPosSC\x20=\x20getNDCFromWC(vec3(0.0),\x200.0);\x0avec4\x20earthPosSCEdge\x20=\x20getNDCFromWC(vec3(0.0),\x20earthRadius\x20*\x201.5);\x0aNDC.xy\x20-=\x20earthPosSC.xy;\x0afloat\x20X\x20=\x20abs(NDC.x)\x20*\x20sceneSize.x;\x0afloat\x20Y\x20=\x20abs(NDC.y)\x20*\x20sceneSize.y;\x0areturn\x20clamp(0.0,\x201.0,\x20max(sqrt(X\x20*\x20X\x20+\x20Y\x20*\x20Y)\x20/\x20max(abs(earthPosSCEdge.x\x20*\x20sceneSize.x),\x201.0)\x20-\x200.8\x20,\x200.0));\x0a}\x0avec4\x20textureDistorted(sampler2D\x20tex,\x20vec2\x20texcoord,\x20vec2\x20direction,\x20vec3\x20distortion,\x20bool\x20isSpace)\x0a{\x0avec2\x20sceneSize\x20=\x20czm_viewport.zw;\x0avec3\x20color;\x0aif(isSpace)\x0a{\x0acolor.r\x20=\x20isInEarth(texcoord\x20+\x20direction\x20*\x20distortion.r,\x20sceneSize)\x20*\x20texture2D(tex,\x20texcoord\x20+\x20direction\x20*\x20distortion.r).r;\x0acolor.g\x20=\x20isInEarth(texcoord\x20+\x20direction\x20*\x20distortion.g,\x20sceneSize)\x20*\x20texture2D(tex,\x20texcoord\x20+\x20direction\x20*\x20distortion.g).g;\x0acolor.b\x20=\x20isInEarth(texcoord\x20+\x20direction\x20*\x20distortion.b,\x20sceneSize)\x20*\x20texture2D(tex,\x20texcoord\x20+\x20direction\x20*\x20distortion.b).b;\x0a}\x0aelse\x0a{\x0acolor.r\x20=\x20texture2D(tex,\x20texcoord\x20+\x20direction\x20*\x20distortion.r).r;\x0acolor.g\x20=\x20texture2D(tex,\x20texcoord\x20+\x20direction\x20*\x20distortion.g).g;\x0acolor.b\x20=\x20texture2D(tex,\x20texcoord\x20+\x20direction\x20*\x20distortion.b).b;\x0a}\x0areturn\x20vec4(clamp(color,\x200.0,\x201.0),\x200.0);\x0a}\x0avoid\x20main(void)\x0a{\x0avec4\x20originalColor\x20=\x20texture2D(colorTexture,\x20v_textureCoordinates);\x0avec3\x20rgb\x20=\x20originalColor.rgb;\x0abool\x20isSpace\x20=\x20length(czm_viewerPositionWC.xyz)\x20>\x20DISTANCE_TO_SPACE;\x0avec4\x20sunPos\x20=\x20czm_morphTime\x20==\x201.0\x20?\x20vec4(czm_sunPositionWC,\x201.0)\x20:\x20vec4(czm_sunPositionColumbusView.zxy,\x201.0);\x0avec4\x20sunPositionEC\x20=\x20czm_view\x20*\x20sunPos;\x0avec4\x20sunPositionWC\x20=\x20czm_eyeToWindowCoordinates(sunPositionEC);\x0asunPos\x20=\x20czm_viewportOrthographic\x20*\x20vec4(sunPositionWC.xy,\x20-sunPositionWC.z,\x201.0);\x0aif(!isSpace\x20||\x20!((sunPos.x\x20>=\x20-1.1\x20&&\x20sunPos.x\x20<=\x201.1)\x20&&\x20(sunPos.y\x20>=\x20-1.1\x20&&\x20sunPos.y\x20<=\x201.1)))\x0a{\x0agl_FragColor\x20=\x20originalColor;\x0areturn;\x0a}\x0avec2\x20texcoord\x20=\x20vec2(1.0)\x20-\x20v_textureCoordinates;\x0avec2\x20pixelSize\x20=\x20czm_pixelRatio\x20/\x20czm_viewport.zw;\x0avec2\x20invPixelSize\x20=\x201.0\x20/\x20pixelSize;\x0avec3\x20distortionVec\x20=\x20pixelSize.x\x20*\x20vec3(-distortion,\x200.0,\x20distortion);\x0avec2\x20ghostVec\x20=\x20(vec2(0.5)\x20-\x20texcoord)\x20*\x20ghostDispersal;\x0avec3\x20direction\x20=\x20normalize(vec3(ghostVec,\x200.0));\x0avec4\x20result\x20=\x20vec4(0.0);\x0avec4\x20ghost\x20=\x20vec4(0.0);\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x204;\x20++i)\x0a{\x0avec2\x20offset\x20=\x20fract(texcoord\x20+\x20ghostVec\x20*\x20float(i));\x0aghost\x20+=\x20textureDistorted(colorTexture,\x20offset,\x20direction.xy,\x20distortionVec,\x20isSpace);\x0a}\x0aresult\x20+=\x20ghost;\x0avec2\x20haloVec\x20=\x20normalize(ghostVec)\x20*\x20haloWidth;\x0afloat\x20weightForHalo\x20=\x20length(vec2(0.5)\x20-\x20fract(texcoord\x20+\x20haloVec))\x20/\x20length(vec2(0.5));\x0aweightForHalo\x20=\x20pow(1.0\x20-\x20weightForHalo,\x205.0);\x0aresult\x20+=\x20textureDistorted(colorTexture,\x20texcoord\x20+\x20haloVec,\x20direction.xy,\x20distortionVec,\x20isSpace)\x20*\x20weightForHalo\x20*\x201.5;\x0avec2\x20dirtTexCoords\x20=\x20(v_textureCoordinates\x20*\x20invPixelSize)\x20/\x20dirtTextureDimensions;\x0aif\x20(dirtTexCoords.x\x20>\x201.0)\x0a{\x0adirtTexCoords.x\x20=\x20mod(floor(dirtTexCoords.x),\x202.0)\x20==\x201.0\x20?\x201.0\x20-\x20fract(dirtTexCoords.x)\x20:\x20\x20fract(dirtTexCoords.x);\x0a}\x0aif\x20(dirtTexCoords.y\x20>\x201.0)\x0a{\x0adirtTexCoords.y\x20=\x20mod(floor(dirtTexCoords.y),\x202.0)\x20==\x201.0\x20?\x201.0\x20-\x20fract(dirtTexCoords.y)\x20:\x20\x20fract(dirtTexCoords.y);\x0a}\x0aresult\x20+=\x20dirtAmount\x20*\x20texture2D(dirtTexture,\x20dirtTexCoords);\x0afloat\x20camrot\x20=\x20czm_view[0].z\x20+\x20czm_view[1].y;\x0afloat\x20cosValue\x20=\x20cos(camrot);\x0afloat\x20sinValue\x20=\x20sin(camrot);\x0amat3\x20rotation\x20=\x20mat3(\x0acosValue,\x20-sinValue,\x200.0,\x0asinValue,\x20cosValue,\x200.0,\x0a0.0,\x200.0,\x201.0\x0a);\x0avec3\x20st1\x20=\x20vec3(v_textureCoordinates\x20*\x202.0\x20-\x20vec2(1.0),\x201.0);\x0avec3\x20st2\x20=\x20vec3((rotation\x20*\x20st1).xy,\x201.0);\x0avec3\x20st3\x20=\x20st2\x20*\x200.5\x20+\x20vec3(0.5);\x0avec2\x20lensStarTexcoord\x20=\x20st3.xy;\x0afloat\x20weightForLensFlare\x20=\x20length(vec3(sunPos.xy,\x200.0));\x0afloat\x20oneMinusWeightForLensFlare\x20=\x20max(1.0\x20-\x20weightForLensFlare,\x200.0);\x0aif\x20(!isSpace)\x0a{\x0aresult\x20*=\x20oneMinusWeightForLensFlare\x20*\x20intensity\x20*\x200.2;\x0a}\x0aelse\x0a{\x0aresult\x20*=\x20oneMinusWeightForLensFlare\x20*\x20intensity;\x0aresult\x20*=\x20texture2D(starTexture,\x20lensStarTexcoord)\x20*\x20pow(weightForLensFlare,\x201.0)\x20*\x20max((1.0\x20-\x20length(vec3(st1.xy,\x200.0))),\x200.0)\x20*\x202.0;\x0a}\x0aresult\x20+=\x20texture2D(colorTexture,\x20v_textureCoordinates);\x0agl_FragColor\x20=\x20result;\x0a}\x0a','642qTEvVm','1641zutmVu','179083ALelxu'];a994_0x846d=function(){return _0x3af985;};return a994_0x846d();}(function(_0x2a0bc6,_0x449839){var _0x194c65=a994_0x49bf,_0x4b0ea6=_0x2a0bc6();while(!![]){try{var _0x4650af=-parseInt(_0x194c65(0xba))/0x1+parseInt(_0x194c65(0xb8))/0x2*(parseInt(_0x194c65(0xb9))/0x3)+parseInt(_0x194c65(0xb6))/0x4+parseInt(_0x194c65(0xbd))/0x5+parseInt(_0x194c65(0xbe))/0x6+parseInt(_0x194c65(0xbc))/0x7+-parseInt(_0x194c65(0xbb))/0x8;if(_0x4650af===_0x449839)break;else _0x4b0ea6['push'](_0x4b0ea6['shift']());}catch(_0x1929c5){_0x4b0ea6['push'](_0x4b0ea6['shift']());}}}(a994_0x846d,0x3699e));function a994_0x49bf(_0x45e037,_0x24b137){var _0x846dd1=a994_0x846d();return a994_0x49bf=function(_0x49bfa6,_0x584834){_0x49bfa6=_0x49bfa6-0xb6;var _0x5b2d7c=_0x846dd1[_0x49bfa6];return _0x5b2d7c;},a994_0x49bf(_0x45e037,_0x24b137);}export default a994_0x3262f4(0xb7);
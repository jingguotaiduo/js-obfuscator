(function(_0x8c8f37,_0x1fc201){var _0x6c4986=a974_0x6920,_0x333e01=_0x8c8f37();while(!![]){try{var _0xe2a0e9=parseInt(_0x6c4986(0xc2))/0x1+-parseInt(_0x6c4986(0xb8))/0x2*(-parseInt(_0x6c4986(0xba))/0x3)+-parseInt(_0x6c4986(0xbd))/0x4*(-parseInt(_0x6c4986(0xc0))/0x5)+parseInt(_0x6c4986(0xc3))/0x6*(-parseInt(_0x6c4986(0xbc))/0x7)+parseInt(_0x6c4986(0xbf))/0x8*(-parseInt(_0x6c4986(0xbb))/0x9)+parseInt(_0x6c4986(0xb9))/0xa*(parseInt(_0x6c4986(0xbe))/0xb)+-parseInt(_0x6c4986(0xc1))/0xc*(-parseInt(_0x6c4986(0xb7))/0xd);if(_0xe2a0e9===_0x1fc201)break;else _0x333e01['push'](_0x333e01['shift']());}catch(_0x556866){_0x333e01['push'](_0x333e01['shift']());}}}(a974_0x1f15,0x75c2d));function a974_0x1f15(){var _0x1dd336=['108081wwGUUE','7hfeMDR','6892eDyXvb','932107wYsrgE','616YFbUZm','830zEJouA','7044bihpjY','819703yDFUpH','2305230DQaheK','9789tlIVEW','36JhDtFg','10srlIjQ','26463rdMseC'];a974_0x1f15=function(){return _0x1dd336;};return a974_0x1f15();}function a974_0x6920(_0x81e4a5,_0x36a7b9){var _0x1f1507=a974_0x1f15();return a974_0x6920=function(_0x6920fb,_0xafcbc){_0x6920fb=_0x6920fb-0xb7;var _0x48734d=_0x1f1507[_0x6920fb];return _0x48734d;},a974_0x6920(_0x81e4a5,_0x36a7b9);}export default'attribute\x20vec3\x20position3DHigh;\x0aattribute\x20vec3\x20position3DLow;\x0aattribute\x20vec4\x20startHiAndForwardOffsetX;\x0aattribute\x20vec4\x20startLoAndForwardOffsetY;\x0aattribute\x20vec4\x20startNormalAndForwardOffsetZ;\x0aattribute\x20vec4\x20endNormalAndTextureCoordinateNormalizationX;\x0aattribute\x20vec4\x20rightNormalAndTextureCoordinateNormalizationY;\x0aattribute\x20vec4\x20startHiLo2D;\x0aattribute\x20vec4\x20offsetAndRight2D;\x0aattribute\x20vec4\x20startEndNormals2D;\x0aattribute\x20vec2\x20texcoordNormalization2D;\x0aattribute\x20float\x20batchId;\x0avarying\x20vec3\x20v_forwardDirectionEC;\x0avarying\x20vec3\x20v_texcoordNormalizationAndHalfWidth;\x0avarying\x20float\x20v_batchId;\x0a#ifdef\x20WIDTH_VARYING\x0avarying\x20float\x20v_width;\x0a#endif\x0a#ifdef\x20ANGLE_VARYING\x0avarying\x20float\x20v_polylineAngle;\x0a#endif\x0a#ifdef\x20PER_INSTANCE_COLOR\x0avarying\x20vec4\x20v_color;\x0a#else\x0avarying\x20vec2\x20v_alignedPlaneDistances;\x0avarying\x20float\x20v_texcoordT;\x0a#endif\x0avoid\x20main()\x0a{\x0av_batchId\x20=\x20batchId;\x0avec4\x20posRelativeToEye2D\x20=\x20czm_translateRelativeToEye(vec3(0.0,\x20startHiLo2D.xy),\x20vec3(0.0,\x20startHiLo2D.zw));\x0avec4\x20posRelativeToEye3D\x20=\x20czm_translateRelativeToEye(startHiAndForwardOffsetX.xyz,\x20startLoAndForwardOffsetY.xyz);\x0avec4\x20posRelativeToEye\x20=\x20czm_columbusViewMorph(posRelativeToEye2D,\x20posRelativeToEye3D,\x20czm_morphTime);\x0avec3\x20posEc2D\x20=\x20(czm_modelViewRelativeToEye\x20*\x20posRelativeToEye2D).xyz;\x0avec3\x20posEc3D\x20=\x20(czm_modelViewRelativeToEye\x20*\x20posRelativeToEye3D).xyz;\x0avec3\x20startEC\x20=\x20(czm_modelViewRelativeToEye\x20*\x20posRelativeToEye).xyz;\x0avec4\x20startPlane2D;\x0avec4\x20startPlane3D;\x0astartPlane2D.xyz\x20=\x20czm_normal\x20*\x20vec3(0.0,\x20startEndNormals2D.xy);\x0astartPlane3D.xyz\x20=\x20czm_normal\x20*\x20startNormalAndForwardOffsetZ.xyz;\x0astartPlane2D.w\x20=\x20-dot(startPlane2D.xyz,\x20posEc2D);\x0astartPlane3D.w\x20=\x20-dot(startPlane3D.xyz,\x20posEc3D);\x0avec4\x20rightPlane2D;\x0avec4\x20rightPlane3D;\x0arightPlane2D.xyz\x20=\x20czm_normal\x20*\x20vec3(0.0,\x20offsetAndRight2D.zw);\x0arightPlane3D.xyz\x20=\x20czm_normal\x20*\x20rightNormalAndTextureCoordinateNormalizationY.xyz;\x0arightPlane2D.w\x20=\x20-dot(rightPlane2D.xyz,\x20posEc2D);\x0arightPlane3D.w\x20=\x20-dot(rightPlane3D.xyz,\x20posEc3D);\x0aposRelativeToEye2D\x20=\x20posRelativeToEye2D\x20+\x20vec4(0.0,\x20offsetAndRight2D.xy,\x200.0);\x0aposRelativeToEye3D\x20=\x20posRelativeToEye3D\x20+\x20vec4(startHiAndForwardOffsetX.w,\x20startLoAndForwardOffsetY.w,\x20startNormalAndForwardOffsetZ.w,\x200.0);\x0aposRelativeToEye\x20=\x20czm_columbusViewMorph(posRelativeToEye2D,\x20posRelativeToEye3D,\x20czm_morphTime);\x0aposEc2D\x20=\x20(czm_modelViewRelativeToEye\x20*\x20posRelativeToEye2D).xyz;\x0aposEc3D\x20=\x20(czm_modelViewRelativeToEye\x20*\x20posRelativeToEye3D).xyz;\x0avec3\x20endEC\x20=\x20(czm_modelViewRelativeToEye\x20*\x20posRelativeToEye).xyz;\x0avec3\x20forwardEc3D\x20=\x20czm_normal\x20*\x20normalize(vec3(startHiAndForwardOffsetX.w,\x20startLoAndForwardOffsetY.w,\x20startNormalAndForwardOffsetZ.w));\x0avec3\x20forwardEc2D\x20=\x20czm_normal\x20*\x20normalize(vec3(0.0,\x20offsetAndRight2D.xy));\x0avec4\x20endPlane2D;\x0avec4\x20endPlane3D;\x0aendPlane2D.xyz\x20=\x20czm_normal\x20*\x20vec3(0.0,\x20startEndNormals2D.zw);\x0aendPlane3D.xyz\x20=\x20czm_normal\x20*\x20endNormalAndTextureCoordinateNormalizationX.xyz;\x0aendPlane2D.w\x20=\x20-dot(endPlane2D.xyz,\x20posEc2D);\x0aendPlane3D.w\x20=\x20-dot(endPlane3D.xyz,\x20posEc3D);\x0av_forwardDirectionEC\x20=\x20normalize(endEC\x20-\x20startEC);\x0avec2\x20cleanTexcoordNormalization2D;\x0acleanTexcoordNormalization2D.x\x20=\x20abs(texcoordNormalization2D.x);\x0acleanTexcoordNormalization2D.y\x20=\x20czm_branchFreeTernary(texcoordNormalization2D.y\x20>\x201.0,\x200.0,\x20abs(texcoordNormalization2D.y));\x0avec2\x20cleanTexcoordNormalization3D;\x0acleanTexcoordNormalization3D.x\x20=\x20abs(endNormalAndTextureCoordinateNormalizationX.w);\x0acleanTexcoordNormalization3D.y\x20=\x20rightNormalAndTextureCoordinateNormalizationY.w;\x0acleanTexcoordNormalization3D.y\x20=\x20czm_branchFreeTernary(cleanTexcoordNormalization3D.y\x20>\x201.0,\x200.0,\x20abs(cleanTexcoordNormalization3D.y));\x0av_texcoordNormalizationAndHalfWidth.xy\x20=\x20mix(cleanTexcoordNormalization2D,\x20cleanTexcoordNormalization3D,\x20czm_morphTime);\x0a#ifdef\x20PER_INSTANCE_COLOR\x0av_color\x20=\x20czm_batchTable_color(batchId);\x0a#else\x20//\x20PER_INSTANCE_COLOR\x0av_alignedPlaneDistances.x\x20=\x20-dot(v_forwardDirectionEC,\x20startEC);\x0av_alignedPlaneDistances.y\x20=\x20-dot(-v_forwardDirectionEC,\x20endEC);\x0a#endif\x20//\x20PER_INSTANCE_COLOR\x0a#ifdef\x20WIDTH_VARYING\x0afloat\x20width\x20=\x20czm_batchTable_width(batchId);\x0afloat\x20halfWidth\x20=\x20width\x20*\x200.5;\x0av_width\x20=\x20width;\x0av_texcoordNormalizationAndHalfWidth.z\x20=\x20halfWidth;\x0a#else\x0afloat\x20halfWidth\x20=\x200.5\x20*\x20czm_batchTable_width(batchId);\x0av_texcoordNormalizationAndHalfWidth.z\x20=\x20halfWidth;\x0a#endif\x0avec4\x20positionEc3D\x20=\x20czm_modelViewRelativeToEye\x20*\x20czm_translateRelativeToEye(position3DHigh,\x20position3DLow);\x0afloat\x20absStartPlaneDistance\x20=\x20abs(czm_planeDistance(startPlane3D,\x20positionEc3D.xyz));\x0afloat\x20absEndPlaneDistance\x20=\x20abs(czm_planeDistance(endPlane3D,\x20positionEc3D.xyz));\x0avec3\x20planeDirection\x20=\x20czm_branchFreeTernary(absStartPlaneDistance\x20<\x20absEndPlaneDistance,\x20startPlane3D.xyz,\x20endPlane3D.xyz);\x0avec3\x20upOrDown\x20=\x20normalize(cross(rightPlane3D.xyz,\x20planeDirection));\x0avec3\x20normalEC\x20=\x20normalize(cross(planeDirection,\x20upOrDown));\x0avec3\x20geodeticSurfaceNormal\x20=\x20normalize(cross(normalEC,\x20forwardEc3D));\x0ageodeticSurfaceNormal\x20*=\x20float(0.0\x20<=\x20rightNormalAndTextureCoordinateNormalizationY.w\x20&&\x20rightNormalAndTextureCoordinateNormalizationY.w\x20<=\x201.0);\x0ageodeticSurfaceNormal\x20*=\x20MAX_TERRAIN_HEIGHT;\x0apositionEc3D.xyz\x20+=\x20geodeticSurfaceNormal;\x0anormalEC\x20*=\x20sign(endNormalAndTextureCoordinateNormalizationX.w);\x0apositionEc3D.xyz\x20+=\x20halfWidth\x20*\x20max(0.0,\x20czm_metersPerPixel(positionEc3D))\x20*\x20normalEC;\x0avec4\x20positionEc2D\x20=\x20czm_modelViewRelativeToEye\x20*\x20czm_translateRelativeToEye(position2DHigh.zxy,\x20position2DLow.zxy);\x0aabsStartPlaneDistance\x20=\x20abs(czm_planeDistance(startPlane2D,\x20positionEc2D.xyz));\x0aabsEndPlaneDistance\x20=\x20abs(czm_planeDistance(endPlane2D,\x20positionEc2D.xyz));\x0aplaneDirection\x20=\x20czm_branchFreeTernary(absStartPlaneDistance\x20<\x20absEndPlaneDistance,\x20startPlane2D.xyz,\x20endPlane2D.xyz);\x0aupOrDown\x20=\x20normalize(cross(rightPlane2D.xyz,\x20planeDirection));\x0anormalEC\x20=\x20normalize(cross(planeDirection,\x20upOrDown));\x0ageodeticSurfaceNormal\x20=\x20normalize(cross(normalEC,\x20forwardEc2D));\x0ageodeticSurfaceNormal\x20*=\x20float(0.0\x20<=\x20texcoordNormalization2D.y\x20&&\x20texcoordNormalization2D.y\x20<=\x201.0);\x0ageodeticSurfaceNormal\x20*=\x20MAX_TERRAIN_HEIGHT;\x0apositionEc2D.xyz\x20+=\x20geodeticSurfaceNormal;\x0anormalEC\x20*=\x20sign(texcoordNormalization2D.x);\x0a#ifndef\x20PER_INSTANCE_COLOR\x0av_texcoordT\x20=\x20clamp(sign(texcoordNormalization2D.x),\x200.0,\x201.0);\x0a#endif\x0apositionEc2D.xyz\x20+=\x20halfWidth\x20*\x20max(0.0,\x20czm_metersPerPixel(positionEc2D))\x20*\x20normalEC;\x0agl_Position\x20=\x20czm_projection\x20*\x20mix(positionEc2D,\x20positionEc3D,\x20czm_morphTime);\x0a#ifdef\x20ANGLE_VARYING\x0avec2\x20approxLineDirection\x20=\x20normalize(vec2(v_forwardDirectionEC.x,\x20-v_forwardDirectionEC.y));\x0aapproxLineDirection.y\x20=\x20czm_branchFreeTernary(approxLineDirection.x\x20==\x200.0\x20&&\x20approxLineDirection.y\x20==\x200.0,\x20-1.0,\x20approxLineDirection.y);\x0av_polylineAngle\x20=\x20czm_fastApproximateAtan(approxLineDirection.x,\x20approxLineDirection.y);\x0a#endif\x0a}\x0a';
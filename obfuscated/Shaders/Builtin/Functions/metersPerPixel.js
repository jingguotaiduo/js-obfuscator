function a871_0x1769(){var _0x14433a=['456122uqEXiH','2778486LBeSIv','27piGYiU','534010TPpWcG','2298289KsJlrD','5xcfuwZ','574456OjspLJ','1232049kIdKYB','1004124jGgdPB','2vZaEcB'];a871_0x1769=function(){return _0x14433a;};return a871_0x1769();}function a871_0x4285(_0x20b35e,_0x364203){var _0x1769f1=a871_0x1769();return a871_0x4285=function(_0x428573,_0x30472a){_0x428573=_0x428573-0xb2;var _0x1468f8=_0x1769f1[_0x428573];return _0x1468f8;},a871_0x4285(_0x20b35e,_0x364203);}(function(_0x57ef37,_0x43b52c){var _0x3fc1a5=a871_0x4285,_0x26f6dd=_0x57ef37();while(!![]){try{var _0x1f5660=parseInt(_0x3fc1a5(0xba))/0x1+parseInt(_0x3fc1a5(0xb9))/0x2*(parseInt(_0x3fc1a5(0xb7))/0x3)+parseInt(_0x3fc1a5(0xb8))/0x4+-parseInt(_0x3fc1a5(0xb5))/0x5*(parseInt(_0x3fc1a5(0xbb))/0x6)+-parseInt(_0x3fc1a5(0xb4))/0x7+parseInt(_0x3fc1a5(0xb6))/0x8+-parseInt(_0x3fc1a5(0xb2))/0x9*(parseInt(_0x3fc1a5(0xb3))/0xa);if(_0x1f5660===_0x43b52c)break;else _0x26f6dd['push'](_0x26f6dd['shift']());}catch(_0x129226){_0x26f6dd['push'](_0x26f6dd['shift']());}}}(a871_0x1769,0x3a1d0));export default'float\x20czm_metersPerPixel(vec4\x20positionEC,\x20float\x20pixelRatio)\x0a{\x0afloat\x20width\x20=\x20czm_viewport.z;\x0afloat\x20height\x20=\x20czm_viewport.w;\x0afloat\x20pixelWidth;\x0afloat\x20pixelHeight;\x0afloat\x20top\x20=\x20czm_frustumPlanes.x;\x0afloat\x20bottom\x20=\x20czm_frustumPlanes.y;\x0afloat\x20left\x20=\x20czm_frustumPlanes.z;\x0afloat\x20right\x20=\x20czm_frustumPlanes.w;\x0aif\x20(czm_sceneMode\x20==\x20czm_sceneMode2D\x20||\x20czm_orthographicIn3D\x20==\x201.0)\x0a{\x0afloat\x20frustumWidth\x20=\x20right\x20-\x20left;\x0afloat\x20frustumHeight\x20=\x20top\x20-\x20bottom;\x0apixelWidth\x20=\x20frustumWidth\x20/\x20width;\x0apixelHeight\x20=\x20frustumHeight\x20/\x20height;\x0a}\x0aelse\x0a{\x0afloat\x20distanceToPixel\x20=\x20-positionEC.z;\x0afloat\x20inverseNear\x20=\x201.0\x20/\x20czm_currentFrustum.x;\x0afloat\x20tanTheta\x20=\x20top\x20*\x20inverseNear;\x0apixelHeight\x20=\x202.0\x20*\x20distanceToPixel\x20*\x20tanTheta\x20/\x20height;\x0atanTheta\x20=\x20right\x20*\x20inverseNear;\x0apixelWidth\x20=\x202.0\x20*\x20distanceToPixel\x20*\x20tanTheta\x20/\x20width;\x0a}\x0areturn\x20max(pixelWidth,\x20pixelHeight)\x20*\x20pixelRatio;\x0a}\x0afloat\x20czm_metersPerPixel(vec4\x20positionEC)\x0a{\x0areturn\x20czm_metersPerPixel(positionEC,\x20czm_pixelRatio);\x0a}\x0a';